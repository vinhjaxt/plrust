services:
  plrust:
    build:
      context: .
      network: host
      dockerfile_inline: |
         FROM postgres:16-alpine
         ARG RUST_VER=1.72.0
         RUN wget -qO- https://sh.rustup.rs | sh -s -- -y --profile minimal --default-toolchain=$${RUST_VER}
         ENV PATH="/root/.cargo/bin:$${PATH}"
         RUN rustup update $${RUST_VER}
         RUN rustup default $${RUST_VER}
         RUN rustup component add --toolchain $${RUST_VER} llvm-tools-preview rustc-dev rust-src --target x86_64-unknown-linux-musl
         RUN apk --no-cache add pkgconfig jq git make musl-dev libstdc++-dev openssl-dev openssl-libs-static $$DOCKER_PG_LLVM_DEPS
         WORKDIR /
         RUN git clone --single-branch --depth 1 --recursive https://github.com/tcdi/plrust src
         RUN chmod a+rwx `$$(which pg_config) --pkglibdir` `$$(which pg_config) --sharedir`/extension

         ENV PATH="/var/lib/postgresql/.cargo/bin:$${PATH}"
         RUN cd /src ; PGRX_VERSION=$$(cargo metadata --format-version 1 | jq -r '.packages[]|select(.name=="pgrx")|.version'); cargo install cargo-pgrx --locked --force --version "$$PGRX_VERSION"

         ENV ADD_RUSTFLAGS="-C target-feature=-crt-static"
         RUN cd /src/plrustc ; sed -i "s#env RUSTFLAGS=#env RUSTFLAGS='$${ADD_RUSTFLAGS} '#g" ./build.sh ; /bin/ash -x ./build.sh

         RUN cd /src/plrustc ; cargo pgrx init --pg16 $$(which pg_config)
         RUN cd /src/plrust ; git clone https://github.com/tcdi/postgrestd.git --branch rust-$${RUST_VER} --recurse-submodules --depth 1 --single-branch ; cp postgrestd/x86_64-postgres-linux-gnu.json postgrestd/x86_64-postgres-linux-musl.json ; sed -i 's#x86_64-unknown-linux-gnu#x86_64-unknown-linux-musl#g' postgrestd/x86_64-postgres-linux-musl.json ; STD_TARGETS="$$(uname -m)-postgres-linux-musl" ./build
         RUN cd /src/plrust ; env RUSTFLAGS="-C target-feature=-crt-static" cargo pgrx install --release 
